# Implementing Azure AI Content Safety

In this exercise, you will provision a Content Safety resource, test the resource in Azure AI Studio, and test the resource in code.

## Provision a *Content Safety* resource

If you don't already have one, you'll need to provision a **Content Safety** resource in your Azure subscription.

1. Open the Azure portal at `https://portal.azure.com`, and sign in using the Microsoft account associated with your Azure subscription.
1. Select **Create a resource**.
1. In the search field, search for **Content Safety**. Then, in the results, select **Create** under **Azure AI Content Safety**.
1. Provision the resource using the following settings:
    - **Subscription**: *Your Azure subscription*.
    - **Resource group**: *Choose or create a resource group*.
    - **Region**:*Choose any available region*
    - **Name**: *Enter a unique name*.
    - **Pricing tier**: Select **F0** (*free*), or **S** (*standard*) if F0 is not available.
1. Select **Review + create**, then select **Create** to provision the resource.
1. Wait for deployment to complete, and then go to the resource.
1. Select **Access Control** in the left navigation bar, then select **+ Add** and **Add role assignment**.
1. Scroll down to choose the **Cognitive Services User** role and select **Next**.
1. Add your account to this role, and then select **Review + assign**.
1. Select **Resource Management** in the left hand navigation bar and select **Keys and Endpoint**. Leave this page open so you can copy the keys later.

## Use Azure AI Content Safety Prompt Shields

In this exercise you will use Azure AI Studio to test Content Safety Prompt Sheilds with two sample inputs. One simulates a user prompt, and the other simulates a document with potentially unsafe text embedded into it.

1. In another browser tab, open the Content Safety page of [Azure AI Studio](https://ai.azure.com/explore/contentsafety) and sign in.
1. Under **Prompt shields** select **Try it out**.
1. On the Prompt sheilds page, under **Azure AI Services** select the Content Safety resource you created earlier.
1. Select **Prompt & document attack content**. Review the user prompt and document text for potential issues.
1. Select **Run test**.
1. In **View results**, verify that Jailbreak attacks were detected in both the user prompt and the document.
1. Under **Next steps**, under **View the code** select **View code**. The **Sample code** window is displayed.
1. Uses the down arrow to select your preferred language and then select **Copy** to copy the sample code to the clipboard.
1. Close the **Sample code** screen.

### Configure your application

1. Download the data file for this exercise from githuburl, saving it to **C:\ContentSafetyLab** on your local computer (or lab VM is applicable). Then unzip the file into the same folder.

2. Open Visual Studio Code and in the **Explorer** pane, browse to the **ContentSafetyLab** folder and expand the **C-Sharp** or **Python** folder depending on your language preference. The **prompt-shield** folder contains the language-specific code files for an app into which you're you're going to integrate Azure AI Content Safety functionality.

#### C#

1. For C#, select **Program.cs**.
1. Paste the sample code under *Paste code here*
1. Scroll down to find the section titled *Replace with your own subscription _key and endpoint*.
1. In the Azure portal, on the Keys and Endpoint page, copy one of the Keys (1 or 2). Replace **<your_subscription_key>** with this value.
1. In the Azure portal, on the Keys and Endpoint page, copy the Endpoint. Paste this value into your code to replace **<your_endpoint_value>**.
1. In **Azure AI Studio**, copy the **User prompt** value. Paste this into your code to replace **<test_user_prompt>**.
1. Scroll down to **<this_is_a_document_source>** and delete this line of code.
1. In **Azure AI Studio**, copy the **Document** value.
1. Scroll down to **<this_is_another_document_source>** and paste your document value.

#### Python

**NOTE:** This code requires the Python extension for Visual Studio Code and the **requests** module. If you need to install the requests module, open a command prompt and from the directory where you installed Python scripts, run **pip install requests**.  

1. For Python, select **prompt-shield.py**.
1. Paste the sample code under *Paste code here*
1. Scroll down to find the section titled *Replace with your own subscription _key and endpoint*.
1. In the Azure portal, on the Keys and Endpoint page, copy one of the Keys (1 or 2). Replace **<your_subscription_key>** with this value.
1. In the Azure portal, on the Keys and Endpoint page, copy the Endpoint. Paste this value into your code to replace **<your_endpoint_value>**.
1. In **Azure AI Studio**, copy the **User prompt** value. Paste this into your code to replace **<test_user_prompt>**.
1. Scroll down to **<this_is_a_document_source>** and delete this line of code.
1. In **Azure AI Studio**, copy the **Document** value.
1. Scroll down to **<this_is_another_document_source>** and paste your document value.

### Test your application

Now your application is ready to test.

1. In the integrated terminal for the **prompt-shield** folder, and enter the following command to run the program:

    - **C#**: `dotnet run`
    - **Python**: `.\prompt-shield.py`

    > **Tip**: You can use the **Maximize panel size** (**^**) icon in the terminal toolbar to see more of the console text.

1. Validate that an attack is detected.
1. Optionally, you can experiment with different test content and document values.
